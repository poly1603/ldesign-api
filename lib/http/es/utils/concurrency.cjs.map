{"version":3,"file":"concurrency.cjs","sources":["../../../../../http/es/utils/concurrency.js"],"sourcesContent":["import{DeduplicationManager as e}from\"./dedup-manager.js\";import{createDeduplicationManager as t}from\"./dedup-manager.js\";import{DeduplicationKeyGenerator as i}from\"./request-dedup.js\";import{createDeduplicationKeyGenerator as a}from\"./request-dedup.js\";import{RateLimitManager as n,createRateLimitManager as r}from\"./rate-limit.js\";class s{constructor(t={}){this.activeRequests=new Set,this.requestQueue=[],this.requestCounter=0,this.processingQueue=!1,this.config={maxConcurrent:t.maxConcurrent??10,maxQueueSize:t.maxQueueSize??100,deduplication:t.deduplication??!0},this.deduplicationManager=new e,this.keyGenerator=new i({includeMethod:!0,includeUrl:!0,includeParams:!0,includeData:!1})}async execute(e,t){if(this.config?.deduplication){const i=this.keyGenerator.generate(t);return this.deduplicationManager.execute(i,()=>this.executeWithConcurrencyControl(e,t))}return this.executeWithConcurrencyControl(e,t)}async executeWithConcurrencyControl(e,t){return new Promise((i,a)=>{const n={id:this.generateTaskId(),execute:e,resolve:i,reject:a,config:t};this.requestQueue.length>=this.config?.maxQueueSize?a(new Error(\"Request queue is full\")):this.activeRequests.size<this.config?.maxConcurrent?this.executeTask(n):this.requestQueue.push(n)})}async executeTask(e){this.activeRequests.add(e.id);try{const t=await e.execute();e.resolve(t)}catch(t){e.reject(t)}finally{this.activeRequests.delete(e.id),this.processQueue()}}processQueue(){if(!this.processingQueue){this.processingQueue=!0;try{for(;this.requestQueue.length>0&&this.activeRequests.size<this.config?.maxConcurrent;){const e=this.requestQueue.shift();e&&this.executeTask(e)}}finally{this.processingQueue=!1}}}cancelQueue(e=\"Queue cancelled\"){this.requestQueue.splice(0).forEach(t=>{t.reject(new Error(e))})}getStatus(){return{activeCount:this.activeRequests.size,queuedCount:this.requestQueue.length,maxConcurrent:this.config?.maxConcurrent,maxQueueSize:this.config?.maxQueueSize,deduplication:this.deduplicationManager.getStats()}}updateConfig(e){Object.assign(this.config,e),this.processQueue()}getConfig(){return{...this.config}}getDeduplicationStats(){return this.deduplicationManager.getStats()}resetDeduplicationStats(){this.deduplicationManager.resetStats()}isRequestDeduplicating(e){const t=this.keyGenerator.generate(e);return this.deduplicationManager.isRunning(t)}cancelDeduplicatedRequest(e){const t=this.keyGenerator.generate(e);this.deduplicationManager.cancel(t)}async waitForDeduplicatedRequest(e){const t=this.keyGenerator.generate(e);return this.deduplicationManager.waitFor(t)}getDeduplicationTasksInfo(){return this.deduplicationManager.getAllTaskInfo()}cleanupTimeoutDeduplicationTasks(e=3e4){return this.deduplicationManager.cleanupTimeoutTasks(e)}configureDeduplicationKeyGenerator(e){this.keyGenerator=new i(e)}generateTaskId(){return`task_${++this.requestCounter}_${Date.now()}`}}function u(e){return new s(e)}export{s as ConcurrencyManager,i as DeduplicationKeyGenerator,e as DeduplicationManager,n as RateLimitManager,u as createConcurrencyManager,a as createDeduplicationKeyGenerator,t as createDeduplicationManager,r as createRateLimitManager};\n//# sourceMappingURL=concurrency.js.map\n"],"names":["t","e","i","a","n"],"mappings":"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"}