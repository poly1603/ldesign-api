{"version":3,"file":"cancel.cjs","sources":["../../../../../http/es/utils/cancel.js"],"sourcesContent":["import{ErrorHandler as e}from\"./error.js\";class t{constructor(){this.isCancelled=!1,this.promise=new Promise(e=>{this.resolvePromise=e})}cancel(e=\"Request cancelled\"){this.isCancelled||(this.isCancelled=!0,this.reason=e,this.resolvePromise(e))}throwIfRequested(){if(this.isCancelled)throw e.createCancelError({})}}class a{constructor(){this.token=new t}cancel(e){this.token.cancel(e)}}class s{constructor(){this.requests=new Map,this.cancelTokens=new Map}static source(){return new a}register(e,t,a){this.requests.set(e,t),a&&(this.cancelTokens.set(e,a),a.promise.then(()=>{this.cancel(e)}).catch(()=>{}))}cancel(e,t=\"Request cancelled\"){const a=this.requests.get(e);a&&(a.abort(),this.requests.delete(e));const s=this.cancelTokens.get(e);s&&!s.isCancelled&&(s.cancel(t),this.cancelTokens.delete(e))}cancelAll(e=\"All requests cancelled\"){this.requests.forEach((e,t)=>{e.abort()}),this.requests.clear(),this.cancelTokens.forEach((t,a)=>{t.isCancelled||t.cancel(e)}),this.cancelTokens.clear()}cleanup(e){this.requests.delete(e),this.cancelTokens.delete(e)}getActiveRequestCount(){return this.requests.size}isCancelled(e){const t=this.cancelTokens.get(e);return!!t&&t.isCancelled}createMergedSignal(e){const t=e.filter(e=>void 0!==e);if(0===t.length)return(new AbortController).signal;if(1===t.length)return t[0];const a=new AbortController,s=()=>{a.abort()};return t.forEach(e=>{e.aborted?a.abort():e.addEventListener(\"abort\",s,{once:!0})}),a.signal}}class n extends s{constructor(e={}){super(),this.metadata=new Map,this.config={defaultTimeout:e.defaultTimeout||3e4,autoCleanup:!1!==e.autoCleanup,cleanupInterval:e.cleanupInterval||6e4},this.config?.autoCleanup&&this.startAutoCleanup()}createWithTags(e,t=[],a){const s=r();this.metadata.set(e,{source:s,tags:new Set(t),createdAt:Date.now(),config:a});const n=new AbortController;return this.register(e,n,s.token),s}cancelBatch(e,t){let a=0;for(const s of e)this.metadata.has(s)&&(this.cancel(s,t||\"Batch cancelled\"),a++);return a}cancelByTag(e,t){const a=this.getRequestIdsByTag(e);return this.cancelBatch(a,t||`Cancelled by tag: ${e}`)}cancelByTags(e,t){const a=new Set;return e.forEach(e=>{this.getRequestIdsByTag(e).forEach(e=>a.add(e))}),this.cancelBatch(Array.from(a),t)}cancelTimeout(e,t){const a=Date.now(),s=[];return this.metadata.forEach((t,n)=>{a-t.createdAt>e&&s.push(n)}),this.cancelBatch(s,t||`Timeout exceeded: ${e}ms`)}cancelWhere(e,t){const a=[];return this.metadata.forEach((t,s)=>{e(t,s)&&a.push(s)}),this.cancelBatch(a,t)}getRequestIdsByTag(e){const t=[];return this.metadata.forEach((a,s)=>{a.tags.has(e)&&t.push(s)}),t}getRequestCountByTag(){const e=new Map;return this.metadata.forEach(t=>{t.tags.forEach(t=>{e.set(t,(e.get(t)||0)+1)})}),e}getActiveRequests(){const e=Date.now(),t=[];return this.metadata.forEach((a,s)=>{t.push({id:s,tags:Array.from(a.tags),age:e-a.createdAt,url:a.config?.url})}),t}getStats(){const e=Date.now();let t=0,a=0;const s=this.getRequestCountByTag();return this.metadata.forEach(s=>{const n=e-s.createdAt;t+=n,a=Math.max(a,n)}),{active:this.metadata.size,byTag:Object.fromEntries(s),averageAge:this.metadata.size>0?t/this.metadata.size:0,oldestAge:a,oldestRequest:this.getOldestRequest()}}getOldestRequest(){if(0===this.metadata.size)return null;const e=Date.now();let t,a=\"\",s=0;return this.metadata.forEach((n,c)=>{const r=e-n.createdAt;r>s&&(s=r,a=c,t=n.config?.url)}),{id:a,age:s,url:t}}has(e){return this.metadata.has(e)}getTags(e){const t=this.metadata.get(e);return t?Array.from(t.tags):[]}addTags(e,...t){const a=this.metadata.get(e);return!!a&&(t.forEach(e=>a.tags.add(e)),!0)}removeTags(e,...t){const a=this.metadata.get(e);return!!a&&(t.forEach(e=>a.tags.delete(e)),!0)}cleanup(e){super.cleanup(e),this.metadata.delete(e)}cleanupAll(){const e=[];this.metadata.forEach((t,a)=>{this.isCancelled(a)&&e.push(a)}),e.forEach(e=>this.cleanup(e))}startAutoCleanup(){this.cleanupTimer=setInterval(()=>{this.cleanupAll()},this.config?.cleanupInterval)}stopAutoCleanup(){this.cleanupTimer&&(clearInterval(this.cleanupTimer),this.cleanupTimer=void 0)}updateConfig(e){const t=this.config?.autoCleanup;this.config={...this.config,...e},t&&!this.config?.autoCleanup?this.stopAutoCleanup():!t&&this.config?.autoCleanup&&this.startAutoCleanup()}destroy(){this.stopAutoCleanup(),this.cancelAll(\"Manager destroyed\"),this.metadata.clear()}}const c=new n;function r(){return s.source()}function o(e){return new n(e)}function l(e){return e&&(e.isCancelError||\"AbortError\"===e.name||\"CANCELED\"===e.code||e.message?.includes(\"cancelled\")||e.message?.includes(\"aborted\"))}function i(e){const t=r();return setTimeout(()=>{t.cancel(`Request timeout after ${e}ms`)},e),t}export{s as CancelManager,t as CancelTokenImpl,a as CancelTokenSource,n as EnhancedCancelManager,r as createCancelTokenSource,o as createEnhancedCancelManager,i as createTimeoutCancelToken,c as globalCancelManager,l as isCancelError};\n//# sourceMappingURL=cancel.js.map\n"],"names":["e","t","a","s","n","c","r"],"mappings":"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"}