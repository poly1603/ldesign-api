{"version":3,"file":"pool.js","sources":["../../../../../http/es/utils/pool.js"],"sourcesContent":["class t{constructor(t={}){this.connections=new Map,this.stats={totalRequests:0,connectionReuse:0,connectionErrors:0},this.waitingQueues=new Map,this.config={maxConnections:10,maxIdleConnections:5,maxConnectionAge:3e5,idleTimeout:6e4,connectionTimeout:3e4,keepAlive:!0,keepAliveTimeout:6e4,pipelining:!1,maxPipelineLength:10,...t},this.startCleanup()}async getConnection(t){const e=this.getConnectionKey(t),n=this.connections.get(e);if(n){const t=n.length;for(let e=0;e<t;e++){const t=n[e];if(\"idle\"===t.state&&this.isConnectionValid(t))return this.markConnectionActive(t),this.stats.connectionReuse++,t}}const o=n||[];let s=0;const i=o.length;for(let t=0;t<i;t++)\"active\"===o[t].state&&s++;if(s>=this.config?.maxConnections)return this.waitForConnection(e,t);const c=await this.createConnection(t);return o.push(c),this.connections.set(e,o),c}releaseConnection(t){const e=`${t.protocol}//${t.host}:${t.port}`,n=this.connections.get(e);if(!n)return;const o=n.find(e=>e.id===t.id);o&&(o.state=\"idle\",o.lastUsedAt=Date.now(),o.useCount++,this.trimIdleConnections(e)),this.notifyWaiters(e)}async createConnection(t){const e=new URL(t.url||\"\"),n={id:this.generateId(),host:e.hostname,port:Number.parseInt(e.port)||(\"https:\"===e.protocol?443:80),protocol:e.protocol,createdAt:Date.now(),lastUsedAt:Date.now(),useCount:1,state:\"active\"};return this.stats.totalRequests++,this.config?.connectionTimeout>0&&setTimeout(()=>{\"active\"===n.state&&this.closeConnection(n)},this.config?.connectionTimeout),n}async waitForConnection(t,e){return new Promise((e,n)=>{const o={resolve:e,reject:n,timestamp:Date.now()},s=this.waitingQueues.get(t)||[];s.push(o),this.waitingQueues.set(t,s);const i=setTimeout(()=>{const t=s.indexOf(o);-1!==t&&s.splice(t,1),n(new Error(\"Connection pool timeout\"))},this.config?.connectionTimeout);o.timeout=i})}markConnectionActive(t){t.state=\"active\",t.lastUsedAt=Date.now()}isConnectionValid(t){const e=Date.now();return!(e-t.createdAt>this.config?.maxConnectionAge||\"idle\"===t.state&&e-t.lastUsedAt>this.config?.idleTimeout)&&\"closed\"!==t.state}closeConnection(t){t.state=\"closed\";const e=`${t.protocol}//${t.host}:${t.port}`,n=this.connections.get(e);if(n){const e=n.findIndex(e=>e.id===t.id);-1!==e&&n.splice(e,1)}}trimIdleConnections(t){const e=this.connections.get(t);if(!e)return;const n=e.filter(t=>\"idle\"===t.state);if(n.length>this.config?.maxIdleConnections){n.sort((t,e)=>t.lastUsedAt-e.lastUsedAt);const t=n.slice(0,n.length-this.config?.maxIdleConnections);for(const e of t)this.closeConnection(e)}}notifyWaiters(t){const e=this.waitingQueues.get(t);if(!e||0===e.length)return;const n=(this.connections.get(t)||[]).find(t=>\"idle\"===t.state&&this.isConnectionValid(t));if(n){const o=e.shift();if(o){const s=o.timeout;s&&clearTimeout(s),this.markConnectionActive(n),o.resolve(n),e.length>0&&this.notifyWaiters(t)}}}getConnectionKey(t){const e=new URL(t.url||\"\");return`${e.protocol}//${e.hostname}:${e.port||(\"https:\"===e.protocol?443:80)}`}startCleanup(){this.cleanupTimer=setInterval(()=>{for(const[t,e]of this.connections.entries()){const n=e.filter(t=>!!this.isConnectionValid(t)||(this.closeConnection(t),!1));0===n.length?this.connections.delete(t):this.connections.set(t,n)}},1e4)}getStats(){let t=0,e=0,n=0;for(const o of this.connections.values())t+=o.length,e+=o.filter(t=>\"active\"===t.state).length,n+=o.filter(t=>\"idle\"===t.state).length;const o=t>0?this.stats.totalRequests/t:0;return{totalConnections:t,activeConnections:e,idleConnections:n,totalRequests:this.stats.totalRequests,connectionReuse:this.stats.connectionReuse,averageRequestsPerConnection:o,connectionErrors:this.stats.connectionErrors}}getConnectionDetails(){return new Map(this.connections)}closeAll(){for(const t of this.connections.values())for(const e of t)this.closeConnection(e);this.connections.clear()}generateId(){return`${Date.now()}-${Math.random().toString(36).substr(2,9)}`}destroy(){this.cleanupTimer&&clearInterval(this.cleanupTimer),this.closeAll()}}function e(e){return new t(e)}const n=e();export{t as RequestPool,e as createRequestPool,n as defaultPool};\n//# sourceMappingURL=pool.js.map\n"],"names":["t","e","n","o"],"mappings":"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"}