{"version":3,"file":"client.js","sources":["../../../../http/es/client.js"],"sourcesContent":["import{InterceptorManagerImpl as e}from\"./interceptors/manager.js\";import{generateId as t}from\"./utils/index.js\";import{CacheManager as r}from\"./utils/cache.js\";import{globalCancelManager as s}from\"./utils/cancel.js\";import{ConcurrencyManager as o}from\"./utils/concurrency.js\";import{DownloadProgressCalculator as a,getFilenameFromResponse as n,getFilenameFromURL as i,getMimeTypeFromFilename as c,saveFileToLocal as u}from\"./utils/download.js\";import{RetryManager as h}from\"./utils/error.js\";import{RequestMonitor as l}from\"./utils/monitor.js\";import{RequestPool as d}from\"./utils/pool.js\";import{PriorityQueue as p,determinePriority as g}from\"./utils/priority.js\";import{validateFile as y,createUploadFormData as m,ProgressCalculator as f}from\"./utils/upload.js\";class w{constructor(t={},a){if(this.isDestroyed=!1,this.config={timeout:1e4,headers:{\"Content-Type\":\"application/json\",...t.headers},...t},!a)throw new Error(\"HTTP adapter is required\");this.adapter=a,this.retryManager=new h(t.retry),this.cancelManager=s,this.cacheManager=new r(t.cache),this.concurrencyManager=new o(t.concurrency),this.monitor=new l(t.monitor),this.priorityQueue=new p(t.priorityQueue),this.requestPool=new d(t.connectionPool),this.interceptors={request:new e,response:new e,error:new e}}async request(e){this.checkDestroyed();const r=this.optimizedMergeConfig(e),s=t();this.monitor.startRequest(s,r);const o=g(r);if(void 0!==o&&this.priorityQueue)return this.priorityQueue.enqueue(r,async()=>{try{const e=await this.executeRequestWithRetry(r,s);return this.monitor.endRequest(s,r,e),e}catch(e){throw this.monitor.endRequest(s,r,void 0,e),e}},o);try{const e=await this.executeRequestWithRetry(r,s);return this.monitor.endRequest(s,r,e),e}catch(e){throw this.monitor.endRequest(s,r,void 0,e),e}}async executeRequestWithRetry(e,t){const r=e.retry;return r?.retries&&r.retries>0?this.retryManager.executeWithRetry(()=>(this.monitor.recordRetry(t),this.executeRequest(e)),e):this.executeRequest(e)}async executeRequest(e){return await this.cacheManager.get(e)||this.concurrencyManager.execute(()=>this.performRequest(e),e)}async performRequest(e){let t=null;try{t=await this.processRequestInterceptors(e);let r=await this.adapter.request(t);return r=await this.processResponseInterceptors(r),await this.cacheManager.set(t,r),r}catch(e){throw await this.processErrorInterceptors(e)}}get(e,t={}){return this.request({...t,method:\"GET\",url:e})}post(e,t,r={}){return this.request({...r,method:\"POST\",url:e,data:t})}put(e,t,r={}){return this.request({...r,method:\"PUT\",url:e,data:t})}delete(e,t={}){return this.request({...t,method:\"DELETE\",url:e})}patch(e,t,r={}){return this.request({...r,method:\"PATCH\",url:e,data:t})}head(e,t={}){return this.request({...t,method:\"HEAD\",url:e})}options(e,t={}){return this.request({...t,method:\"OPTIONS\",url:e})}cancelAll(e){this.cancelManager.cancelAll(e)}getActiveRequestCount(){return this.cancelManager.getActiveRequestCount()}updateRetryConfig(e){this.retryManager.updateConfig(e)}setConfig(e){this.config={...this.config,...e,headers:{...this.config?.headers,...e.headers}}}getConfig(){return{...this.config}}addRequestInterceptor(e,t){return this.interceptors.request.use(e,t)}addResponseInterceptor(e,t){return this.interceptors.response.use(e,t)}removeRequestInterceptor(e){this.interceptors.request.eject(e)}removeResponseInterceptor(e){this.interceptors.response.eject(e)}clearCache(){return this.cacheManager.clear()}getConcurrencyStatus(){return this.concurrencyManager.getStatus()}cancelQueue(e){this.concurrencyManager.cancelQueue(e)}async processRequestInterceptors(e){let t=e;const r=this.interceptors.request.getInterceptors();for(const e of r)try{t=await e.fulfilled(t)}catch(t){throw e.rejected?await e.rejected(t):t}return t}async processResponseInterceptors(e){let t=e;const r=this.interceptors.response.getInterceptors();for(const e of r)try{t=await e.fulfilled(t)}catch(t){throw e.rejected?await e.rejected(t):t}return t}async processErrorInterceptors(e){let t=e;const r=this.interceptors.error.getInterceptors();for(const e of r)try{t=await e.fulfilled(t)}catch(e){t=e}return t}optimizedMergeConfig(e){if(!e||0===Object.keys(e).length)return{...this.config};const t={...this.config,...e};return this.config?.headers&&e.headers&&(t.headers={...this.config.headers,...e.headers}),this.config?.params&&e.params&&(t.params={...this.config.params,...e.params}),t}async upload(e,t,r={}){this.checkDestroyed();const s=Array.isArray(t)?t:[t];return 1===s.length?this.uploadSingleFile(e,s[0],r):this.uploadMultipleFiles(e,s,r)}async uploadSingleFile(e,t,r){y(t,r);const s=Date.now(),o=new f,a={method:\"POST\",url:e,data:m(t,r),headers:{...r.headers||{}},...r||{},onUploadProgress:r.onProgress?e=>{const s=o.calculate(e.loaded,e.total||0,t);r.onProgress?.(s)}:void 0};return{...await this.request(a),file:t,duration:Date.now()-s}}async uploadMultipleFiles(e,t,r){t.forEach(e=>y(e,r));const s=Date.now(),o=new f,a=new FormData,n=r.fileField||\"files\";t.forEach((e,t)=>{a.append(`${n}[${t}]`,e)}),r.formData&&Object.entries(r.formData).forEach(([e,t])=>{a.append(e,t)});const i={method:\"POST\",url:e,data:a,headers:{...r.headers||{}},...r||{},onUploadProgress:r.onProgress?e=>{const t=o.calculate(e.loaded,e.total||0);r.onProgress?.(t)}:void 0};return{...await this.request(i),file:t[0],duration:Date.now()-s}}async download(e,t={}){this.checkDestroyed();const r=Date.now(),s=new a,o={method:\"GET\",url:e,responseType:\"blob\",...t||{},onDownloadProgress:t.onProgress?e=>{const r=s.calculate(e.loaded,e.total||0,t.filename);t.onProgress?.(r)}:void 0},h=await this.request(o);let l=t.filename;l||(l=n(h.headers)||i(h.config.url||e)||\"download\");const d=h.data?.type||c(l);let p;return!1!==t.autoSave&&typeof window<\"u\"&&(u(h.data,l),p=URL.createObjectURL(h.data)),{data:h.data,filename:l,size:h.data.size,type:d,duration:Date.now()-r,url:p}}getPerformanceStats(){return this.monitor.getStats()}getRecentMetrics(e){return this.monitor.getRecentMetrics(e)}getSlowRequests(){return this.monitor.getSlowRequests()}getFailedRequests(){return this.monitor.getFailedRequests()}enableMonitoring(){this.monitor.enable()}disableMonitoring(){this.monitor.disable()}getPriorityQueueStats(){return this.priorityQueue.getStats()}getConnectionPoolStats(){return this.requestPool.getStats()}getConnectionDetails(){return this.requestPool.getConnectionDetails()}exportMetrics(){return{performance:this.monitor.exportMetrics(),priorityQueue:this.priorityQueue.getStats(),connectionPool:this.requestPool.getStats(),concurrency:this.concurrencyManager.getStatus(),cache:this.cacheManager.getStats?this.cacheManager.getStats():null}}setPriority(e,t){return{...e,priority:t}}destroy(){if(this.isDestroyed)return;this.isDestroyed=!0,this.cancelManager.cancelAll(\"Client destroyed\"),this.cacheManager.clear(),this.concurrencyManager.cancelQueue(\"Client destroyed\"),this.priorityQueue.destroy(),this.requestPool.destroy(),this.monitor.clear(),this.interceptors.request.clear(),this.interceptors.response.clear(),this.interceptors.error.clear();const e=this.cacheManager;e&&\"function\"==typeof e.destroy&&e.destroy(),this.adapter=null,this.retryManager=null,this.cancelManager=null,this.cacheManager=null,this.concurrencyManager=null,this.monitor=null,this.priorityQueue=null,this.requestPool=null}checkDestroyed(){if(this.isDestroyed)throw new Error(\"HttpClient has been destroyed\")}}export{w as HttpClientImpl};\n//# sourceMappingURL=client.js.map\n"],"names":["t","a","h","s","r","o","l","p","d","e","g","y","f","m","n","i","c","u"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAA6vB,MAAM,CAAA,CAAC;AAAA,EAAC,WAAA,CAAYA,EAAAA,GAAE,EAAC,EAAEC,EAAAA,EAAE;AAAC,IAAA,IAAG,IAAA,CAAK,WAAA,GAAY,KAAA,EAAG,IAAA,CAAK,MAAA,GAAO,EAAC,OAAA,EAAQ,GAAA,EAAI,OAAA,EAAQ,EAAC,cAAA,EAAe,kBAAA,EAAmB,GAAGD,EAAAA,CAAE,OAAA,EAAO,EAAE,GAAGA,EAAAA,EAAC,EAAE,CAACC,EAAAA,EAAE,MAAM,IAAI,KAAA,CAAM,0BAA0B,CAAA;AAAE,IAAA,IAAA,CAAK,OAAA,GAAQA,EAAAA,EAAE,IAAA,CAAK,YAAA,GAAa,IAAIC,CAAA,CAAEF,EAAAA,CAAE,KAAK,CAAA,EAAE,IAAA,CAAK,aAAA,GAAcG,CAAA,EAAE,IAAA,CAAK,YAAA,GAAa,IAAIC,CAAA,CAAEJ,EAAAA,CAAE,KAAK,CAAA,EAAE,IAAA,CAAK,kBAAA,GAAmB,IAAIK,GAAA,CAAEL,EAAAA,CAAE,WAAW,CAAA,EAAE,IAAA,CAAK,OAAA,GAAQ,IAAIM,EAAEN,EAAAA,CAAE,OAAO,CAAA,EAAE,IAAA,CAAK,aAAA,GAAc,IAAIO,GAAA,CAAEP,EAAAA,CAAE,aAAa,CAAA,EAAE,IAAA,CAAK,WAAA,GAAY,IAAIQ,GAAA,CAAER,EAAAA,CAAE,cAAc,CAAA,EAAE,IAAA,CAAK,YAAA,GAAa,EAAC,OAAA,EAAQ,IAAIS,GAAA,EAAA,EAAE,QAAA,EAAS,IAAIA,GAAA,EAAA,EAAE,KAAA,EAAM,IAAIA,GAAA,EAAA,EAAC;AAAA,EAAC;AAAA,EAAC,MAAM,QAAQA,EAAAA,EAAE;AAAC,IAAA,IAAA,CAAK,cAAA,EAAe;AAAE,IAAA,MAAML,KAAE,IAAA,CAAK,oBAAA,CAAqBK,EAAC,CAAA,EAAEN,KAAEH,CAAA,EAAE;AAAE,IAAA,IAAA,CAAK,OAAA,CAAQ,YAAA,CAAaG,EAAAA,EAAEC,EAAC,CAAA;AAAE,IAAA,MAAMC,EAAAA,GAAEK,EAAEN,EAAC,CAAA;AAAE,IAAA,IAAG,MAAA,KAASC,MAAG,IAAA,CAAK,aAAA,SAAqB,IAAA,CAAK,aAAA,CAAc,OAAA,CAAQD,EAAAA,EAAE,YAAS;AAAC,MAAA,IAAG;AAAC,QAAA,MAAMK,EAAAA,GAAE,MAAM,IAAA,CAAK,uBAAA,CAAwBL,IAAED,EAAC,CAAA;AAAE,QAAA,OAAO,KAAK,OAAA,CAAQ,UAAA,CAAWA,EAAAA,EAAEC,EAAAA,EAAEK,EAAC,CAAA,EAAEA,EAAAA;AAAA,MAAC,SAAOA,EAAAA,EAAE;AAAC,QAAA,MAAM,KAAK,OAAA,CAAQ,UAAA,CAAWN,IAAEC,EAAAA,EAAE,MAAA,EAAOK,EAAC,CAAA,EAAEA,EAAAA;AAAA,MAAC;AAAA,IAAC,GAAEJ,EAAC,CAAA;AAAE,IAAA,IAAG;AAAC,MAAA,MAAMI,EAAAA,GAAE,MAAM,IAAA,CAAK,uBAAA,CAAwBL,IAAED,EAAC,CAAA;AAAE,MAAA,OAAO,KAAK,OAAA,CAAQ,UAAA,CAAWA,EAAAA,EAAEC,EAAAA,EAAEK,EAAC,CAAA,EAAEA,EAAAA;AAAA,IAAC,SAAOA,EAAAA,EAAE;AAAC,MAAA,MAAM,KAAK,OAAA,CAAQ,UAAA,CAAWN,IAAEC,EAAAA,EAAE,MAAA,EAAOK,EAAC,CAAA,EAAEA,EAAAA;AAAA,IAAC;AAAA,EAAC;AAAA,EAAC,MAAM,uBAAA,CAAwBA,EAAAA,EAAET,EAAAA,EAAE;AAAC,IAAA,MAAMI,KAAEK,EAAAA,CAAE,KAAA;AAAM,IAAA,OAAOL,EAAAA,EAAG,WAASA,EAAAA,CAAE,OAAA,GAAQ,IAAE,IAAA,CAAK,YAAA,CAAa,gBAAA,CAAiB,OAAK,IAAA,CAAK,OAAA,CAAQ,YAAYJ,EAAC,CAAA,EAAE,KAAK,cAAA,CAAeS,EAAC,IAAGA,EAAC,CAAA,GAAE,IAAA,CAAK,cAAA,CAAeA,EAAC,CAAA;AAAA,EAAC;AAAA,EAAC,MAAM,eAAeA,EAAAA,EAAE;AAAC,IAAA,OAAO,MAAM,IAAA,CAAK,YAAA,CAAa,GAAA,CAAIA,EAAC,CAAA,IAAG,IAAA,CAAK,kBAAA,CAAmB,OAAA,CAAQ,MAAI,IAAA,CAAK,cAAA,CAAeA,EAAC,GAAEA,EAAC,CAAA;AAAA,EAAC;AAAA,EAAC,MAAM,eAAeA,EAAAA,EAAE;AAAC,IAAA,IAAIT,EAAAA,GAAE,IAAA;AAAK,IAAA,IAAG;AAAC,MAAAA,EAAAA,GAAE,MAAM,IAAA,CAAK,0BAAA,CAA2BS,EAAC,CAAA;AAAE,MAAA,IAAIL,EAAAA,GAAE,MAAM,IAAA,CAAK,OAAA,CAAQ,QAAQJ,EAAC,CAAA;AAAE,MAAA,OAAOI,EAAAA,GAAE,MAAM,IAAA,CAAK,2BAAA,CAA4BA,EAAC,CAAA,EAAE,MAAM,IAAA,CAAK,YAAA,CAAa,GAAA,CAAIJ,EAAAA,EAAEI,EAAC,CAAA,EAAEA,EAAAA;AAAA,IAAC,SAAOK,EAAAA,EAAE;AAAC,MAAA,MAAM,MAAM,IAAA,CAAK,wBAAA,CAAyBA,EAAC,CAAA;AAAA,IAAC;AAAA,EAAC;AAAA,EAAC,GAAA,CAAIA,EAAAA,EAAET,EAAAA,GAAE,EAAC,EAAE;AAAC,IAAA,OAAO,IAAA,CAAK,QAAQ,EAAC,GAAGA,IAAE,MAAA,EAAO,KAAA,EAAM,GAAA,EAAIS,EAAAA,EAAE,CAAA;AAAA,EAAC;AAAA,EAAC,IAAA,CAAKA,EAAAA,EAAET,EAAAA,EAAEI,EAAAA,GAAE,EAAC,EAAE;AAAC,IAAA,OAAO,IAAA,CAAK,OAAA,CAAQ,EAAC,GAAGA,EAAAA,EAAE,MAAA,EAAO,MAAA,EAAO,GAAA,EAAIK,EAAAA,EAAE,IAAA,EAAKT,EAAAA,EAAE,CAAA;AAAA,EAAC;AAAA,EAAC,GAAA,CAAIS,EAAAA,EAAET,EAAAA,EAAEI,EAAAA,GAAE,EAAC,EAAE;AAAC,IAAA,OAAO,IAAA,CAAK,OAAA,CAAQ,EAAC,GAAGA,EAAAA,EAAE,MAAA,EAAO,KAAA,EAAM,GAAA,EAAIK,EAAAA,EAAE,IAAA,EAAKT,EAAAA,EAAE,CAAA;AAAA,EAAC;AAAA,EAAC,MAAA,CAAOS,EAAAA,EAAET,EAAAA,GAAE,EAAC,EAAE;AAAC,IAAA,OAAO,IAAA,CAAK,QAAQ,EAAC,GAAGA,IAAE,MAAA,EAAO,QAAA,EAAS,GAAA,EAAIS,EAAAA,EAAE,CAAA;AAAA,EAAC;AAAA,EAAC,KAAA,CAAMA,EAAAA,EAAET,EAAAA,EAAEI,EAAAA,GAAE,EAAC,EAAE;AAAC,IAAA,OAAO,IAAA,CAAK,OAAA,CAAQ,EAAC,GAAGA,EAAAA,EAAE,MAAA,EAAO,OAAA,EAAQ,GAAA,EAAIK,EAAAA,EAAE,IAAA,EAAKT,EAAAA,EAAE,CAAA;AAAA,EAAC;AAAA,EAAC,IAAA,CAAKS,EAAAA,EAAET,EAAAA,GAAE,EAAC,EAAE;AAAC,IAAA,OAAO,IAAA,CAAK,QAAQ,EAAC,GAAGA,IAAE,MAAA,EAAO,MAAA,EAAO,GAAA,EAAIS,EAAAA,EAAE,CAAA;AAAA,EAAC;AAAA,EAAC,OAAA,CAAQA,EAAAA,EAAET,EAAAA,GAAE,EAAC,EAAE;AAAC,IAAA,OAAO,IAAA,CAAK,QAAQ,EAAC,GAAGA,IAAE,MAAA,EAAO,SAAA,EAAU,GAAA,EAAIS,EAAAA,EAAE,CAAA;AAAA,EAAC;AAAA,EAAC,UAAUA,EAAAA,EAAE;AAAC,IAAA,IAAA,CAAK,aAAA,CAAc,UAAUA,EAAC,CAAA;AAAA,EAAC;AAAA,EAAC,qBAAA,GAAuB;AAAC,IAAA,OAAO,IAAA,CAAK,cAAc,qBAAA,EAAsB;AAAA,EAAC;AAAA,EAAC,kBAAkBA,EAAAA,EAAE;AAAC,IAAA,IAAA,CAAK,YAAA,CAAa,aAAaA,EAAC,CAAA;AAAA,EAAC;AAAA,EAAC,UAAUA,EAAAA,EAAE;AAAC,IAAA,IAAA,CAAK,SAAO,EAAC,GAAG,IAAA,CAAK,MAAA,EAAO,GAAGA,EAAAA,EAAE,OAAA,EAAQ,EAAC,GAAG,KAAK,MAAA,EAAQ,OAAA,EAAQ,GAAGA,EAAAA,CAAE,SAAO,EAAC;AAAA,EAAC;AAAA,EAAC,SAAA,GAAW;AAAC,IAAA,OAAM,EAAC,GAAG,IAAA,CAAK,MAAA,EAAM;AAAA,EAAC;AAAA,EAAC,qBAAA,CAAsBA,IAAET,EAAAA,EAAE;AAAC,IAAA,OAAO,IAAA,CAAK,YAAA,CAAa,OAAA,CAAQ,GAAA,CAAIS,IAAET,EAAC,CAAA;AAAA,EAAC;AAAA,EAAC,sBAAA,CAAuBS,IAAET,EAAAA,EAAE;AAAC,IAAA,OAAO,IAAA,CAAK,YAAA,CAAa,QAAA,CAAS,GAAA,CAAIS,IAAET,EAAC,CAAA;AAAA,EAAC;AAAA,EAAC,yBAAyBS,EAAAA,EAAE;AAAC,IAAA,IAAA,CAAK,YAAA,CAAa,OAAA,CAAQ,KAAA,CAAMA,EAAC,CAAA;AAAA,EAAC;AAAA,EAAC,0BAA0BA,EAAAA,EAAE;AAAC,IAAA,IAAA,CAAK,YAAA,CAAa,QAAA,CAAS,KAAA,CAAMA,EAAC,CAAA;AAAA,EAAC;AAAA,EAAC,UAAA,GAAY;AAAC,IAAA,OAAO,IAAA,CAAK,aAAa,KAAA,EAAM;AAAA,EAAC;AAAA,EAAC,oBAAA,GAAsB;AAAC,IAAA,OAAO,IAAA,CAAK,mBAAmB,SAAA,EAAU;AAAA,EAAC;AAAA,EAAC,YAAYA,EAAAA,EAAE;AAAC,IAAA,IAAA,CAAK,kBAAA,CAAmB,YAAYA,EAAC,CAAA;AAAA,EAAC;AAAA,EAAC,MAAM,2BAA2BA,EAAAA,EAAE;AAAC,IAAA,IAAIT,EAAAA,GAAES,EAAAA;AAAE,IAAA,MAAML,EAAAA,GAAE,IAAA,CAAK,YAAA,CAAa,OAAA,CAAQ,eAAA,EAAgB;AAAE,IAAA,KAAA,MAAUK,EAAAA,IAAKL,IAAE,IAAG;AAAC,MAAAJ,EAAAA,GAAE,MAAMS,EAAAA,CAAE,SAAA,CAAUT,EAAC,CAAA;AAAA,IAAC,SAAOA,EAAAA,EAAE;AAAC,MAAA,MAAMS,GAAE,QAAA,GAAS,MAAMA,EAAAA,CAAE,QAAA,CAAST,EAAC,CAAA,GAAEA,EAAAA;AAAA,IAAC;AAAC,IAAA,OAAOA,EAAAA;AAAA,EAAC;AAAA,EAAC,MAAM,4BAA4BS,EAAAA,EAAE;AAAC,IAAA,IAAIT,EAAAA,GAAES,EAAAA;AAAE,IAAA,MAAML,EAAAA,GAAE,IAAA,CAAK,YAAA,CAAa,QAAA,CAAS,eAAA,EAAgB;AAAE,IAAA,KAAA,MAAUK,EAAAA,IAAKL,IAAE,IAAG;AAAC,MAAAJ,EAAAA,GAAE,MAAMS,EAAAA,CAAE,SAAA,CAAUT,EAAC,CAAA;AAAA,IAAC,SAAOA,EAAAA,EAAE;AAAC,MAAA,MAAMS,GAAE,QAAA,GAAS,MAAMA,EAAAA,CAAE,QAAA,CAAST,EAAC,CAAA,GAAEA,EAAAA;AAAA,IAAC;AAAC,IAAA,OAAOA,EAAAA;AAAA,EAAC;AAAA,EAAC,MAAM,yBAAyBS,EAAAA,EAAE;AAAC,IAAA,IAAIT,EAAAA,GAAES,EAAAA;AAAE,IAAA,MAAML,EAAAA,GAAE,IAAA,CAAK,YAAA,CAAa,KAAA,CAAM,eAAA,EAAgB;AAAE,IAAA,KAAA,MAAUK,EAAAA,IAAKL,IAAE,IAAG;AAAC,MAAAJ,EAAAA,GAAE,MAAMS,EAAAA,CAAE,SAAA,CAAUT,EAAC,CAAA;AAAA,IAAC,SAAOS,EAAAA,EAAE;AAAC,MAAAT,EAAAA,GAAES,EAAAA;AAAA,IAAC;AAAC,IAAA,OAAOT,EAAAA;AAAA,EAAC;AAAA,EAAC,qBAAqBS,EAAAA,EAAE;AAAC,IAAA,IAAG,CAACA,EAAAA,IAAG,CAAA,KAAI,MAAA,CAAO,IAAA,CAAKA,EAAC,CAAA,CAAE,MAAA,EAAO,OAAM,EAAC,GAAG,IAAA,CAAK,MAAA,EAAM;AAAE,IAAA,MAAMT,KAAE,EAAC,GAAG,IAAA,CAAK,MAAA,EAAO,GAAGS,EAAAA,EAAC;AAAE,IAAA,OAAO,IAAA,CAAK,MAAA,EAAQ,OAAA,IAASA,EAAAA,CAAE,OAAA,KAAUT,EAAAA,CAAE,OAAA,GAAQ,EAAC,GAAG,IAAA,CAAK,MAAA,CAAO,OAAA,EAAQ,GAAGS,EAAAA,CAAE,OAAA,EAAO,CAAA,EAAG,IAAA,CAAK,MAAA,EAAQ,MAAA,IAAQA,EAAAA,CAAE,MAAA,KAAST,GAAE,MAAA,GAAO,EAAC,GAAG,IAAA,CAAK,MAAA,CAAO,MAAA,EAAO,GAAGS,EAAAA,CAAE,QAAM,CAAA,EAAGT,EAAAA;AAAA,EAAC;AAAA,EAAC,MAAM,MAAA,CAAOS,EAAAA,EAAET,EAAAA,EAAEI,EAAAA,GAAE,EAAC,EAAE;AAAC,IAAA,IAAA,CAAK,cAAA,EAAe;AAAE,IAAA,MAAMD,KAAE,KAAA,CAAM,OAAA,CAAQH,EAAC,CAAA,GAAEA,EAAAA,GAAE,CAACA,EAAC,CAAA;AAAE,IAAA,OAAO,CAAA,KAAIG,EAAAA,CAAE,MAAA,GAAO,IAAA,CAAK,iBAAiBM,EAAAA,EAAEN,EAAAA,CAAE,CAAC,CAAA,EAAEC,EAAC,CAAA,GAAE,IAAA,CAAK,mBAAA,CAAoBK,EAAAA,EAAEN,IAAEC,EAAC,CAAA;AAAA,EAAC;AAAA,EAAC,MAAM,gBAAA,CAAiBK,EAAAA,EAAET,EAAAA,EAAEI,EAAAA,EAAE;AAAC,IAAAO,GAAA,CAAEX,IAAEI,EAAC,CAAA;AAAE,IAAA,MAAMD,EAAAA,GAAE,IAAA,CAAK,GAAA,EAAI,EAAEE,KAAE,IAAIO,CAAA,EAAA,EAAEX,EAAAA,GAAE,EAAC,QAAO,MAAA,EAAO,GAAA,EAAIQ,EAAAA,EAAE,IAAA,EAAKI,IAAEb,EAAAA,EAAEI,EAAC,CAAA,EAAE,OAAA,EAAQ,EAAC,GAAGA,EAAAA,CAAE,OAAA,IAAS,EAAC,EAAC,EAAE,GAAGA,EAAAA,IAAG,EAAC,EAAE,gBAAA,EAAiBA,EAAAA,CAAE,UAAA,GAAW,CAAAK,EAAAA,KAAG;AAAC,MAAA,MAAMN,EAAAA,GAAEE,GAAE,SAAA,CAAUI,EAAAA,CAAE,QAAOA,EAAAA,CAAE,KAAA,IAAO,GAAET,EAAC,CAAA;AAAE,MAAAI,EAAAA,CAAE,aAAaD,EAAC,CAAA;AAAA,IAAC,IAAE,MAAA,EAAM;AAAE,IAAA,OAAM,EAAC,GAAG,MAAM,IAAA,CAAK,OAAA,CAAQF,EAAC,CAAA,EAAE,IAAA,EAAKD,EAAAA,EAAE,QAAA,EAAS,IAAA,CAAK,GAAA,KAAMG,EAAAA,EAAC;AAAA,EAAC;AAAA,EAAC,MAAM,mBAAA,CAAoBM,EAAAA,EAAET,EAAAA,EAAEI,EAAAA,EAAE;AAAC,IAAAJ,GAAE,OAAA,CAAQ,CAAAS,OAAGE,GAAA,CAAEF,EAAAA,EAAEL,EAAC,CAAC,CAAA;AAAE,IAAA,MAAMD,EAAAA,GAAE,IAAA,CAAK,GAAA,EAAI,EAAEE,EAAAA,GAAE,IAAIO,CAAA,EAAA,EAAEX,EAAAA,GAAE,IAAI,QAAA,EAAA,EAASa,EAAAA,GAAEV,EAAAA,CAAE,SAAA,IAAW,OAAA;AAAQ,IAAAJ,EAAAA,CAAE,OAAA,CAAQ,CAACS,EAAAA,EAAET,EAAAA,KAAI;AAAC,MAAAC,GAAE,MAAA,CAAO,CAAA,EAAGa,EAAC,CAAA,CAAA,EAAId,EAAC,KAAIS,EAAC,CAAA;AAAA,IAAC,CAAC,CAAA,EAAEL,EAAAA,CAAE,QAAA,IAAU,OAAO,OAAA,CAAQA,EAAAA,CAAE,QAAQ,CAAA,CAAE,OAAA,CAAQ,CAAC,CAACK,EAAAA,EAAET,EAAC,CAAA,KAAI;AAAC,MAAAC,EAAAA,CAAE,MAAA,CAAOQ,EAAAA,EAAET,EAAC,CAAA;AAAA,IAAC,CAAC,CAAA;AAAE,IAAA,MAAMe,EAAAA,GAAE,EAAC,MAAA,EAAO,MAAA,EAAO,GAAA,EAAIN,IAAE,IAAA,EAAKR,EAAAA,EAAE,OAAA,EAAQ,EAAC,GAAGG,EAAAA,CAAE,WAAS,EAAC,EAAC,EAAE,GAAGA,EAAAA,IAAG,IAAG,gBAAA,EAAiBA,EAAAA,CAAE,UAAA,GAAW,CAAAK,EAAAA,KAAG;AAAC,MAAA,MAAMT,KAAEK,EAAAA,CAAE,SAAA,CAAUI,GAAE,MAAA,EAAOA,EAAAA,CAAE,SAAO,CAAC,CAAA;AAAE,MAAAL,EAAAA,CAAE,aAAaJ,EAAC,CAAA;AAAA,IAAC,IAAE,MAAA,EAAM;AAAE,IAAA,OAAM,EAAC,GAAG,MAAM,IAAA,CAAK,QAAQe,EAAC,CAAA,EAAE,IAAA,EAAKf,EAAAA,CAAE,CAAC,CAAA,EAAE,QAAA,EAAS,IAAA,CAAK,GAAA,KAAMG,EAAAA,EAAC;AAAA,EAAC;AAAA,EAAC,MAAM,QAAA,CAASM,EAAAA,EAAET,EAAAA,GAAE,EAAC,EAAE;AAAC,IAAA,IAAA,CAAK,cAAA,EAAe;AAAE,IAAA,MAAMI,EAAAA,GAAE,KAAK,GAAA,EAAI,EAAED,KAAE,IAAIF,CAAA,EAAA,EAAEI,EAAAA,GAAE,EAAC,MAAA,EAAO,KAAA,EAAM,KAAII,EAAAA,EAAE,YAAA,EAAa,MAAA,EAAO,GAAGT,EAAAA,IAAG,IAAG,kBAAA,EAAmBA,EAAAA,CAAE,UAAA,GAAW,CAAAS,EAAAA,KAAG;AAAC,MAAA,MAAML,EAAAA,GAAED,GAAE,SAAA,CAAUM,EAAAA,CAAE,QAAOA,EAAAA,CAAE,KAAA,IAAO,CAAA,EAAET,EAAAA,CAAE,QAAQ,CAAA;AAAE,MAAAA,EAAAA,CAAE,aAAaI,EAAC,CAAA;AAAA,IAAC,IAAE,MAAA,EAAM,EAAEF,KAAE,MAAM,IAAA,CAAK,QAAQG,EAAC,CAAA;AAAE,IAAA,IAAIC,KAAEN,EAAAA,CAAE,QAAA;AAAS,IAAAM,EAAAA,KAAIA,EAAAA,GAAEQ,GAAA,CAAEZ,EAAAA,CAAE,OAAO,CAAA,IAAGa,CAAA,CAAEb,EAAAA,CAAE,MAAA,CAAO,GAAA,IAAKO,EAAC,CAAA,IAAG,UAAA,CAAA;AAAY,IAAA,MAAMD,EAAAA,GAAEN,EAAAA,CAAE,IAAA,EAAM,IAAA,IAAMc,IAAEV,EAAC,CAAA;AAAE,IAAA,IAAIC,EAAAA;AAAE,IAAA,OAAM,KAAA,KAAKP,EAAAA,CAAE,QAAA,IAAU,OAAO,SAAO,GAAA,KAAMiB,GAAA,CAAEf,EAAAA,CAAE,IAAA,EAAKI,EAAC,CAAA,EAAEC,EAAAA,GAAE,GAAA,CAAI,eAAA,CAAgBL,GAAE,IAAI,CAAA,CAAA,EAAG,EAAC,IAAA,EAAKA,GAAE,IAAA,EAAK,QAAA,EAASI,EAAAA,EAAE,IAAA,EAAKJ,GAAE,IAAA,CAAK,IAAA,EAAK,IAAA,EAAKM,EAAAA,EAAE,UAAS,IAAA,CAAK,GAAA,EAAI,GAAEJ,EAAAA,EAAE,KAAIG,EAAAA,EAAC;AAAA,EAAC;AAAA,EAAC,mBAAA,GAAqB;AAAC,IAAA,OAAO,IAAA,CAAK,QAAQ,QAAA,EAAS;AAAA,EAAC;AAAA,EAAC,iBAAiBE,EAAAA,EAAE;AAAC,IAAA,OAAO,IAAA,CAAK,OAAA,CAAQ,gBAAA,CAAiBA,EAAC,CAAA;AAAA,EAAC;AAAA,EAAC,eAAA,GAAiB;AAAC,IAAA,OAAO,IAAA,CAAK,QAAQ,eAAA,EAAgB;AAAA,EAAC;AAAA,EAAC,iBAAA,GAAmB;AAAC,IAAA,OAAO,IAAA,CAAK,QAAQ,iBAAA,EAAkB;AAAA,EAAC;AAAA,EAAC,gBAAA,GAAkB;AAAC,IAAA,IAAA,CAAK,QAAQ,MAAA,EAAO;AAAA,EAAC;AAAA,EAAC,iBAAA,GAAmB;AAAC,IAAA,IAAA,CAAK,QAAQ,OAAA,EAAQ;AAAA,EAAC;AAAA,EAAC,qBAAA,GAAuB;AAAC,IAAA,OAAO,IAAA,CAAK,cAAc,QAAA,EAAS;AAAA,EAAC;AAAA,EAAC,sBAAA,GAAwB;AAAC,IAAA,OAAO,IAAA,CAAK,YAAY,QAAA,EAAS;AAAA,EAAC;AAAA,EAAC,oBAAA,GAAsB;AAAC,IAAA,OAAO,IAAA,CAAK,YAAY,oBAAA,EAAqB;AAAA,EAAC;AAAA,EAAC,aAAA,GAAe;AAAC,IAAA,OAAM,EAAC,WAAA,EAAY,IAAA,CAAK,OAAA,CAAQ,aAAA,EAAc,EAAE,aAAA,EAAc,IAAA,CAAK,aAAA,CAAc,QAAA,EAAS,EAAE,cAAA,EAAe,IAAA,CAAK,WAAA,CAAY,QAAA,EAAS,EAAE,WAAA,EAAY,IAAA,CAAK,kBAAA,CAAmB,SAAA,EAAU,EAAE,KAAA,EAAM,IAAA,CAAK,YAAA,CAAa,QAAA,GAAS,IAAA,CAAK,YAAA,CAAa,QAAA,KAAW,IAAA,EAAI;AAAA,EAAC;AAAA,EAAC,WAAA,CAAYA,IAAET,EAAAA,EAAE;AAAC,IAAA,OAAM,EAAC,GAAGS,EAAAA,EAAE,QAAA,EAAST,EAAAA,EAAC;AAAA,EAAC;AAAA,EAAC,OAAA,GAAS;AAAC,IAAA,IAAG,KAAK,WAAA,EAAY;AAAO,IAAA,IAAA,CAAK,cAAY,IAAA,EAAG,IAAA,CAAK,cAAc,SAAA,CAAU,kBAAkB,GAAE,IAAA,CAAK,YAAA,CAAa,KAAA,EAAM,EAAE,KAAK,kBAAA,CAAmB,WAAA,CAAY,kBAAkB,CAAA,EAAE,IAAA,CAAK,cAAc,OAAA,EAAQ,EAAE,IAAA,CAAK,WAAA,CAAY,SAAQ,EAAE,IAAA,CAAK,QAAQ,KAAA,EAAM,EAAE,KAAK,YAAA,CAAa,OAAA,CAAQ,OAAM,EAAE,IAAA,CAAK,aAAa,QAAA,CAAS,KAAA,IAAQ,IAAA,CAAK,YAAA,CAAa,MAAM,KAAA,EAAM;AAAE,IAAA,MAAMS,KAAE,IAAA,CAAK,YAAA;AAAa,IAAAA,EAAAA,IAAG,UAAA,IAAY,OAAOA,EAAAA,CAAE,OAAA,IAASA,EAAAA,CAAE,OAAA,EAAQ,EAAE,IAAA,CAAK,OAAA,GAAQ,IAAA,EAAK,IAAA,CAAK,eAAa,IAAA,EAAK,IAAA,CAAK,aAAA,GAAc,IAAA,EAAK,IAAA,CAAK,YAAA,GAAa,IAAA,EAAK,IAAA,CAAK,kBAAA,GAAmB,IAAA,EAAK,IAAA,CAAK,OAAA,GAAQ,IAAA,EAAK,IAAA,CAAK,aAAA,GAAc,IAAA,EAAK,KAAK,WAAA,GAAY,IAAA;AAAA,EAAI;AAAA,EAAC,cAAA,GAAgB;AAAC,IAAA,IAAG,IAAA,CAAK,WAAA,EAAY,MAAM,IAAI,MAAM,+BAA+B,CAAA;AAAA,EAAC;AAAC;;;;;;;"}